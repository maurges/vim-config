:set -XOverloadedStrings -XTypeApplications

:{
ghci_prompterFunction :: [String] -> Int -> IO String
ghci_prompterFunction modules _linenr = pure $
    let
      joinModules = Data.List.intercalate " "
      modulesString = case Data.List.splitAt 5 (reverse modules) of
            (modules', []) -> joinModules modules'
            (modules', _)  -> joinModules modules' ++ " ..."
    in "\ESC[34m\STX" ++ modulesString ++ "\nÎ»\ESC[0m\STX "
:}
:set prompt-function ghci_prompterFunction
:set prompt-cont "\ESC[34m\STX|\ESC[0m\STX "
